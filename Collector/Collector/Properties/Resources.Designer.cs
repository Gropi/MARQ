//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Collector.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Collector.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Files have been Successfuly copied. ähnelt.
        /// </summary>
        internal static string ALL_COPIED_FILE_SUCCESSULY {
            get {
                return ResourceManager.GetString("ALL_COPIED_FILE_SUCCESSULY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not allowed to append text. ähnelt.
        /// </summary>
        internal static string APPEND_TEXTNOT_ALLOWED {
            get {
                return ResourceManager.GetString("APPEND_TEXTNOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You attempt to start the program with a missing parameter for {0}. ähnelt.
        /// </summary>
        internal static string ARGS_MISSING_PARAMETER {
            get {
                return ResourceManager.GetString("ARGS_MISSING_PARAMETER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die check the drive name. ähnelt.
        /// </summary>
        internal static string CHECK_DRIVE_NAME {
            get {
                return ResourceManager.GetString("CHECK_DRIVE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object is not a {0} ähnelt.
        /// </summary>
        internal static string COMPARE_NOT_CORRECT_TYPE {
            get {
                return ResourceManager.GetString("COMPARE_NOT_CORRECT_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;Content&apos; List is Null ähnelt.
        /// </summary>
        internal static string CONTENT_LIST_NULL {
            get {
                return ResourceManager.GetString("CONTENT_LIST_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content wrote Successfully to the Stream Writer ähnelt.
        /// </summary>
        internal static string CONTENT_WRITTEN_SUCCESSFULY_ON_STREAMWRITER {
            get {
                return ResourceManager.GetString("CONTENT_WRITTEN_SUCCESSFULY_ON_STREAMWRITER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Copied File has been Corrupted ähnelt.
        /// </summary>
        internal static string COPIED_FILE_CORRUPTED {
            get {
                return ResourceManager.GetString("COPIED_FILE_CORRUPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File has been successfuly copied ähnelt.
        /// </summary>
        internal static string COPIED_SUCCESSFULY {
            get {
                return ResourceManager.GetString("COPIED_SUCCESSFULY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy has not been complited successfuly ähnelt.
        /// </summary>
        internal static string COPY_FAILED {
            get {
                return ResourceManager.GetString("COPY_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CRC HashMap has been Successfuly created. ähnelt.
        /// </summary>
        internal static string CRC_HASHMAP_SUCCESSFULY_CREATED {
            get {
                return ResourceManager.GetString("CRC_HASHMAP_SUCCESSFULY_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Processing CRC ähnelt.
        /// </summary>
        internal static string CRC_INFO_PROCESSING {
            get {
                return ResourceManager.GetString("CRC_INFO_PROCESSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExcelParser: CSV File apended successfuy o the content. ähnelt.
        /// </summary>
        internal static string CSVFILE_APPENDED_SUCCESSFULY_TO_CONTENT {
            get {
                return ResourceManager.GetString("CSVFILE_APPENDED_SUCCESSFULY_TO_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die en-EN ähnelt.
        /// </summary>
        internal static string CULTEINFO_ENGLAND {
            get {
                return ResourceManager.GetString("CULTEINFO_ENGLAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given parameter string {0} in the method {1} is null. ähnelt.
        /// </summary>
        internal static string CULTUREPARSERHELPER_STING_IS_NULL {
            get {
                return ResourceManager.GetString("CULTUREPARSERHELPER_STING_IS_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #999999 ähnelt.
        /// </summary>
        internal static string DEFAULT_MAPPOI_COLOR {
            get {
                return ResourceManager.GetString("DEFAULT_MAPPOI_COLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination File Path is Null. ähnelt.
        /// </summary>
        internal static string DESTINATION_FILE_NULL {
            get {
                return ResourceManager.GetString("DESTINATION_FILE_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to find Directory &quot;{0}&quot;. ähnelt.
        /// </summary>
        internal static string DIRECTORY_NOT_FOUND {
            get {
                return ResourceManager.GetString("DIRECTORY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download has been canceled. ähnelt.
        /// </summary>
        internal static string DOWNLOAD_FILE_CANCELED {
            get {
                return ResourceManager.GetString("DOWNLOAD_FILE_CANCELED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}     downloaded {1} of {2} bytes. {3}% complete. ähnelt.
        /// </summary>
        internal static string DOWNLOAD_FILE_DOWNLOADED {
            get {
                return ResourceManager.GetString("DOWNLOAD_FILE_DOWNLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no local path given where the downloaded file has to be stored to. ähnelt.
        /// </summary>
        internal static string DOWNLOAD_FILE_LOCAL_PATH_NOT_GIVEN {
            get {
                return ResourceManager.GetString("DOWNLOAD_FILE_LOCAL_PATH_NOT_GIVEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download completed. ähnelt.
        /// </summary>
        internal static string DOWNLOAD_FILE_SUCCESSFUL {
            get {
                return ResourceManager.GetString("DOWNLOAD_FILE_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There is no url given to download from. ähnelt.
        /// </summary>
        internal static string DOWNLOAD_FILE_URL_NOT_GIVEN {
            get {
                return ResourceManager.GetString("DOWNLOAD_FILE_URL_NOT_GIVEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error!  Exception has been occured: {0}, at {1}. ähnelt.
        /// </summary>
        internal static string ERROR {
            get {
                return ResourceManager.GetString("ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExcelParser: CSV File has been Successfuly Generated. ähnelt.
        /// </summary>
        internal static string EXCEL_PARSER_CSV_SUCCESSFULY_GENERATED {
            get {
                return ResourceManager.GetString("EXCEL_PARSER_CSV_SUCCESSFULY_GENERATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        internal static string EXCEL_PARSER_FAILED_TO_LOAD_XLSX {
            get {
                return ResourceManager.GetString("EXCEL_PARSER_FAILED_TO_LOAD_XLSX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExcelParse: FileStream has been Successfuly Generated. ähnelt.
        /// </summary>
        internal static string EXCEL_PARSER_FILESTREAM_SUCCESSFULY_GENERATED {
            get {
                return ResourceManager.GetString("EXCEL_PARSER_FILESTREAM_SUCCESSFULY_GENERATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start loading file {0}. ähnelt.
        /// </summary>
        internal static string EXCEL_PARSER_START_LOADING_FILE {
            get {
                return ResourceManager.GetString("EXCEL_PARSER_START_LOADING_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExcelParser: XLS File has been Successfuly Generated. ähnelt.
        /// </summary>
        internal static string EXCEL_PARSER_XLS_SUCCESSFULY_GENERATED {
            get {
                return ResourceManager.GetString("EXCEL_PARSER_XLS_SUCCESSFULY_GENERATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die While parsing excel file an error occured. The exception is: ähnelt.
        /// </summary>
        internal static string EXCELPARSER_HANDLED_IO_EXCEPTION {
            get {
                return ResourceManager.GetString("EXCELPARSER_HANDLED_IO_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ExpectedFileExtension is Null ähnelt.
        /// </summary>
        internal static string EXPECTED_FILE_EXTENSION_NULL {
            get {
                return ResourceManager.GetString("EXPECTED_FILE_EXTENSION_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The File has been deleted successfuly. ähnelt.
        /// </summary>
        internal static string FILE_DELETED_SUCCESSFULY {
            get {
                return ResourceManager.GetString("FILE_DELETED_SUCCESSFULY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get All Files Failed. ähnelt.
        /// </summary>
        internal static string GET_ALL_FIES_FAILED {
            get {
                return ResourceManager.GetString("GET_ALL_FIES_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I/O Exception was occured . Exception : {0}. ähnelt.
        /// </summary>
        internal static string IOEXCEPTION {
            get {
                return ResourceManager.GetString("IOEXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to load the size of the folder. The error message is: {0} ähnelt.
        /// </summary>
        internal static string IOHANDLER_ERROR_FOLDER_SIZE {
            get {
                return ResourceManager.GetString("IOHANDLER_ERROR_FOLDER_SIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given file has not been found. Expected file: {0} ähnelt.
        /// </summary>
        internal static string IOHANDLER_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("IOHANDLER_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given file extension is not correct. The extension is &quot;{0}&quot;. ähnelt.
        /// </summary>
        internal static string IOHANDLER_FILEEXTENSION_NOT_CORRECT {
            get {
                return ResourceManager.GetString("IOHANDLER_FILEEXTENSION_NOT_CORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given file name is a null reference. Expected file: {0} ähnelt.
        /// </summary>
        internal static string IOHANDLER_NULL_REFERENCE_GIVEN {
            get {
                return ResourceManager.GetString("IOHANDLER_NULL_REFERENCE_GIVEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given file path doesn&apos;t exist or is not a .json file. Please give a valid json file. ähnelt.
        /// </summary>
        internal static string JSONPARSER_INVALID_FILE {
            get {
                return ResourceManager.GetString("JSONPARSER_INVALID_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file content could not be parsed into an JObject! Error: &quot;{0}&quot; ähnelt.
        /// </summary>
        internal static string JSONPARSER_INVALID_FILE_CONTENT {
            get {
                return ResourceManager.GetString("JSONPARSER_INVALID_FILE_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given string is not in a valid json format and can&apos;t be parsed into a JSON Object: {0} ähnelt.
        /// </summary>
        internal static string JSONPARSER_INVALID_JSONSTRING {
            get {
                return ResourceManager.GetString("JSONPARSER_INVALID_JSONSTRING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The JsonParameter passed is null. ähnelt.
        /// </summary>
        internal static string JSONPARSER_JSONPARAMETER_NULL {
            get {
                return ResourceManager.GetString("JSONPARSER_JSONPARAMETER_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given key {0} doesn&apos;t exist in the json object.  ähnelt.
        /// </summary>
        internal static string JSONPARSER_NON_EXISTING_KEY {
            get {
                return ResourceManager.GetString("JSONPARSER_NON_EXISTING_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line has been Successfuly Written. ähnelt.
        /// </summary>
        internal static string LINE_WRITTEN_SUCCESSFULY {
            get {
                return ResourceManager.GetString("LINE_WRITTEN_SUCCESSFULY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grouplayer ähnelt.
        /// </summary>
        internal static string MAPPOIHANDLING_GROUPLAYERNAME {
            get {
                return ResourceManager.GetString("MAPPOIHANDLING_GROUPLAYERNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No External Drive has been found. ähnelt.
        /// </summary>
        internal static string NO_DRIVE_FOUND {
            get {
                return ResourceManager.GetString("NO_DRIVE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File not in correct format. Expected: {0} ähnelt.
        /// </summary>
        internal static string NOT_CORRECT_FORMAT {
            get {
                return ResourceManager.GetString("NOT_CORRECT_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File has not been moved. ähnelt.
        /// </summary>
        internal static string NOT_MOVED {
            get {
                return ResourceManager.GetString("NOT_MOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File Override is Disabled, please check the permission variable. ähnelt.
        /// </summary>
        internal static string OVERRIDE_FILE_DISABLED {
            get {
                return ResourceManager.GetString("OVERRIDE_FILE_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given parameter must not be null. Parameter {0}. ähnelt.
        /// </summary>
        internal static string PARAMETER_IS_NULL {
            get {
                return ResourceManager.GetString("PARAMETER_IS_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The process {0} finished successful.  ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_CLOSED_SUCCESSFUL {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_CLOSED_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The process name or the process arguments passed is null or empty.  ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_EMPTY_PROCESSNAME {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_EMPTY_PROCESSNAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are {0} instances alive. Start killing them. ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_FOUND_RUNNING_INSTANCE {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_FOUND_RUNNING_INSTANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process {0} idle process started. ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_IDLE_PROCESS_STARTED {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_IDLE_PROCESS_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The idle time of the process {0} is expired. Program is going to kill this process now. ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_IDLE_TIME_EXPIRED {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_IDLE_TIME_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Killed ADTF instance with PID {0} and name {1}. ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_KILLED_INSTANCE {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_KILLED_INSTANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The program is going to start a the new process {0} now. ähnelt.
        /// </summary>
        internal static string PROCESSHANDLER_START_NEW_INSTANCE {
            get {
                return ResourceManager.GetString("PROCESSHANDLER_START_NEW_INSTANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XSD Schema has been Successfuly created. ähnelt.
        /// </summary>
        internal static string SCHEMA_CREATED_SUCCESSFULY {
            get {
                return ResourceManager.GetString("SCHEMA_CREATED_SUCCESSFULY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Schema passed as null. ähnelt.
        /// </summary>
        internal static string SCHEMA_NULL {
            get {
                return ResourceManager.GetString("SCHEMA_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source File Path is null. ähnelt.
        /// </summary>
        internal static string SOURCE_FILE_NULL {
            get {
                return ResourceManager.GetString("SOURCE_FILE_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stream Writer is null ähnelt.
        /// </summary>
        internal static string STREAM_WRITER_NULL {
            get {
                return ResourceManager.GetString("STREAM_WRITER_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die process successfuly completed in : {0} ähnelt.
        /// </summary>
        internal static string SUCCESSFUL {
            get {
                return ResourceManager.GetString("SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given TreeViewItem/ TreeViewNode is null.  ähnelt.
        /// </summary>
        internal static string TREEVIEWNODE_ITEM_NULL {
            get {
                return ResourceManager.GetString("TREEVIEWNODE_ITEM_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die XSD Parser: XSD File has been Generated successfuly. ähnelt.
        /// </summary>
        internal static string WRITING_XSD_FILE_SUCCESSFUL {
            get {
                return ResourceManager.GetString("WRITING_XSD_FILE_SUCCESSFUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File is already Exists. ähnelt.
        /// </summary>
        internal static string XSDPARSER_FILE_EXISTS_EXCEPTION {
            get {
                return ResourceManager.GetString("XSDPARSER_FILE_EXISTS_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given source file has not been found. Expeceted file: {0} ähnelt.
        /// </summary>
        internal static string XSDPARSER_SOURCE_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("XSDPARSER_SOURCE_FILE_NOT_FOUND", resourceCulture);
            }
        }
    }
}
